### SET PREFIX ###
# use Ctrl+Space as Prefix, followed by bound key for function (split window, reload config, etc)
unbind C-b
set -g prefix C-space

### Set globals
set -g mouse on
bind C-space send-prefix

#set-option -sa terminal-overrides ',xterm-256:RGB'
#set -g default-terminal "${TERM}"
set -g default-terminal "tmux-256color"
set-option -sa terminal-overrides 'screen-256color-bce'
# N to name, w for window
unbind n  #DEFAULT KEY: Move to next window
unbind w  #DEFAULT KEY: change current window interactively
bind n command-prompt "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"
set-option -sa terminal-overrides ',xterm-256:RGB'
set -g default-terminal "tmux-256color"
set-option -g default-shell /usr/bin/fish


### Number Panes
# Start numbers with 1 instead of 0
set -g base-index 1
set-window-option -g pane-base-index 1

# Tmux uses prefix + number
# but we can use Alt-j and Alt-K like in VIM 
bind -n M-j previous-window
bind -n M-k next-window

### VIM-LIKE ###
# Lets make it more Vim-Like:
set-window-option -g mode-keys vi
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# restore overwritten C-l binding (clear screen)
bind C-l send-keys 'C-l'
# note, prefix,[ to switch to vi mode.  q to return to default
#Default for begin-selection and copy using xsel
unbind -T copy-mode-vi Space
#Default for copy-selection
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Neovim Compatability:  
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

#reload tmux.conf
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# v and h are not bound by default, but we never know in the next versions...
unbind v
unbind h

unbind % # Split vertically
unbind '"' # Split horizontally

bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"


# resize panes
#bind -n C-h select-pane -L
#bind -n C-j select-pane -D
#bind -n C-k select-pane -U
#bind -n C-l select-pane -R

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'jimeh/tmux-themepack'
# set -g @plugin 'dracula/tmux'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @themepack 'powerline/double/cyan'
set -g @plugin 'jaclu/tmux-menus' 
set -g @plugin 'wfxr/tmux-power'

set -g @tmux_power_theme 'moon'
# Other examples:
set -g @tmux_power_prefix_highlight_pos 'LR'
set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'

# These make tmux transparent again
set -g "window-style" "bg=default"
set -g "window-active-style" "bg=default"
# set -g @plugin 'NikoKS/kitty-vim-tmux-navigator'
#set -g default-command /bin/fish
#set -g default-shell /usr/bin/fish
set -g default-command /bin/fish
set -g default-shell /bin/fish


#### tmux-sensible settings ####
set -s escape-time 0
set -g display-time 4000
set -g status-interval 10  # Refersh status bar every 10s
set -g focus-events on # Focus Events for termianls that support them
set -w -g aggressive-resize on # Useful for grouped sessions


#### Keybinds! #### 

### Rename Windows/Panes
# N to name, w for window
unbind p  
unbind r  #lets use it for renaming
unbind n  #DEFAULT KEY: Move to next window
unbind w  #DEFAULT KEY: change current window interactively
bind r command-prompt "rename-window '%%'" # rename current pane
bind w new-window -c "#{pane_current_path}" #New Window
bind C-p previous-window
bind C-n next-window
bind Space last-window

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

